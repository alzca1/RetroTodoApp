{"version":3,"sources":["Components/Todo/Todo.module.css","Components/TodoInfo/TodoInfo.module.css","UI/Modal/Modal.module.css","Containers/TodoList/TodoList.module.css","Components/Todo/EditableAction/EditableAction.js","Components/Todo/Todo.js","hoc/Aux.js","UI/Modal/Modal.js","Components/TodoInfo/TodoInfo.js","Containers/TodoList/TodoList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","editableAction","props","contentEditable","onBlur","blur","suppressContentEditableWarning","text","Todo","state","mouseOver","onMouseOverHandler","setState","onMouseLeaveHandler","buttons","this","className","classes","Buttons","Button","deleteButton","onClick","clickedDelete","doneButton","clickedDone","infoButton","clickedInfo","done","TodoDone","onMouseEnter","onMouseLeave","EditableAction","editTodo","todo","action","moment","dueDate","format","dueTime","Component","Auxiliary","children","modal","Modal","style","transform","show","opacity","todoInfo","TodoInfo","todos","todoIndex","editAction","TodoInfoDue","TodoInfoDueItem","type","onChange","editDate","value","undefined","editTime","TodoInfoPriority","TodoInfoButton","TodoInfoNotes","rows","placeholder","editNote","notes","TodoList","color","priority","showInfo","showInfoIndex","addTodoHandler","event","preventDefault","form","target","field","date","time","console","log","newTodo","push","reset","removeTodoHandler","todoId","slice","splice","doneTodoToggleHandler","editTodoHandler","index","newAction","textContent","editDateHandler","newDate","currentTarget","editTimeHandler","newTime","editNotesHandler","newNote","toggleTodoInfoHandler","currentStatus","map","key","Aux","onSubmit","name","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b1744ec6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Todo\":\"Todo_Todo__2xcWW\",\"TodoDone\":\"Todo_TodoDone__2ipzZ\",\"Button\":\"Todo_Button__30BHX\",\"deleteButton\":\"Todo_deleteButton__2UwBe\",\"doneButton\":\"Todo_doneButton__1D-kU\",\"infoButton\":\"Todo_infoButton__17cZF\",\"Buttons\":\"Todo_Buttons__1QY7V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoInfo\":\"TodoInfo_TodoInfo__3yvSN\",\"TodoInfoDue\":\"TodoInfo_TodoInfoDue__3a1vQ\",\"TodoInfoDueItem\":\"TodoInfo_TodoInfoDueItem__1UI3T\",\"TodoInfoButton\":\"TodoInfo_TodoInfoButton__3oYEH\",\"TodoInfoNotes\":\"TodoInfo_TodoInfoNotes__2BAiz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__16SAR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TodoList\":\"TodoList_TodoList__3-p48\",\"Done\":\"TodoList_Done__1InEs\",\"notDone\":\"TodoList_notDone__2ddcn\"};","import React from 'react'\n\nconst editableAction = (props) => {\n    return(\n        <p\n          contentEditable={true}\n          onBlur={props.blur}\n          suppressContentEditableWarning={true}\n          \n        >{props.text}</p>\n    )\n}\n\n\nexport default editableAction; ","import React, { Component } from \"react\";\nimport classes from \"./Todo.module.css\";\nimport EditableAction from './EditableAction/EditableAction'\nimport * as moment from 'moment';\nimport 'moment/locale/es'\n\nclass Todo extends Component {\n  state = {\n    mouseOver: false,\n  };\n\n  onMouseOverHandler = () => {\n    this.setState({ mouseOver: true });\n  };\n\n  onMouseLeaveHandler = () => {\n    this.setState({ mouseOver: false });\n  };\n\n  render() {\n    let buttons = null;\n    if (this.state.mouseOver) {\n      buttons = (\n        <div className={classes.Buttons}>\n          <button\n            className={`${classes.Button} ${classes.deleteButton}`}\n            onClick={this.props.clickedDelete}\n          >\n            X\n          </button>\n          <button\n            className={`${classes.Button} ${classes.doneButton}`}\n            onClick={this.props.clickedDone}\n          >\n            âˆš\n          </button>\n          <button className={`${classes.Button} ${classes.infoButton}`} onClick={this.props.clickedInfo}>?</button>\n        </div>\n      );\n    }\n    if (this.props.done) {\n    }\n    return (\n      <div\n        className={`${classes.Todo} ${\n          this.props.done ? classes.TodoDone : classes.Todo\n        }`}\n        onMouseEnter={this.onMouseOverHandler}\n        onMouseLeave={this.onMouseLeaveHandler}\n      >\n        {buttons}\n        <EditableAction blur={this.props.editTodo} text={this.props.todo.action} />\n        <small>{moment(this.props.todo.dueDate).format('l')} {this.props.todo.dueTime}</small>\n      </div>\n    );\n  }\n}\n\nexport default Todo;\n","const Auxiliary = (props) => props.children;\n\nexport default Auxiliary;","import React from 'react'; \nimport classes from './Modal.module.css';\n\n\nconst modal = (props) => {\n    return(\n        <div className={classes.Modal} style={{\n            transform: props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\n            opacity: props.show ? \"1\" : \"0\",\n          }}>\n            {props.children}\n        </div>\n    )\n}\n\n\nexport default modal; ","import React from \"react\";\nimport EditableAction from \"../Todo/EditableAction/EditableAction\";\n\nimport classes from \"./TodoInfo.module.css\";\n\nconst todoInfo = (props) => {\n  return (\n    <div className={classes.TodoInfo}>\n      <h3>Todo Info</h3>\n      <EditableAction\n        text={\n          props.todos[props.todoIndex]\n            ? props.todos[props.todoIndex].action\n            : null\n        }\n        blur={props.editAction}\n      />\n      <div className={classes.TodoInfoDue}>\n        <input\n          className={classes.TodoInfoDueItem}\n          type=\"date\"\n          onChange={props.editDate}\n          value={\n            props.todos[props.todoIndex]\n              ? props.todos[props.todoIndex].dueDate\n              : undefined\n          }\n        />\n        <input\n          className={classes.TodoInfoDueItem}\n          type=\"time\"\n          onChange={props.editTime}\n          value={\n            props.todos[props.todoIndex]\n              ? props.todos[props.todoIndex].dueTime\n              : undefined\n          }\n        />\n      </div>\n      <div className={classes.TodoInfoPriority}>\n        <button className={classes.TodoInfoButton}>Low</button>\n        <button className={classes.TodoInfoButton}>Medium</button>\n        <button className={classes.TodoInfoButton}>High</button>\n      </div>\n      <div className={classes.TodoInfoNotes}>\n        <textarea rows=\"3\" placeholder=\"Your notes...\" onChange={props.editNote} value={props.todos[props.todoIndex].notes}></textarea>\n      </div>\n      <button onClick={props.show}>Save</button>\n    </div>\n  );\n};\n\nexport default todoInfo;\n","import React, { Component } from \"react\";\nimport Todo from \"../../Components/Todo/Todo\";\nimport Aux from \"../../hoc/Aux\";\nimport Modal from \"../../UI/Modal/Modal\";\nimport TodoInfo from \"../../Components/TodoInfo/TodoInfo\";\nimport classes from \"./TodoList.module.css\";\nimport moment from 'moment'\n\nclass TodoList extends Component {\n  state = {\n    todos: [\n      {\n        action: \"Cleaning the dishes\",\n        color: \"red\",\n        done: false,\n        dueDate: \"2020-08-27\",\n        dueTime: \"13:30\",\n        priority: \"low\",\n        notes: \"lorem ipsum\" \n      },\n      {\n        action: \"Do the Shopping\",\n        color: \"yellow\",\n        done: false,\n        dueDate: \"2020-08-27\",\n        dueTime: \"13:30\",\n        priority: \"low\",\n        notes: \"lorem ipsum\" \n      },\n      {\n        action: \"Taking the dog out for a walk\",\n        color: \"green\",\n        done: false,\n        dueDate: \"2020-08-27\",\n        dueTime: \"13:30\",\n        priority: \"low\",\n        notes: \"lorem ipsum\" \n      },\n      {\n        action: \"Hang up the clothes\",\n        color: \"red\",\n        done: false,\n        dueDate: \"2020-08-27\",\n        dueTime: \"13:30\",\n        priority: \"low\",\n        notes: \"lorem ipsum\" \n      },\n    ],\n    showInfo: false,\n    showInfoIndex: 0,\n  };\n\n  addTodoHandler = (event) => {\n    event.preventDefault();\n    const form = event.target;\n    const action = event.target.field.value;\n    const date = moment().format('YYYY-MM-DD')\n    const time = moment().format('hh:mm');\n    console.log(date)\n    if (action) {\n      const newTodo = {\n        action: event.target.field.value,\n        done: false,\n        dueDate: date,\n        dueTime:time, \n        priority: \"low\",\n        notes: \"\"\n      };\n      const todos = this.state.todos;\n      todos.push(newTodo);\n      this.setState({\n        todos: todos,\n      });\n      form.reset();\n    }\n  };\n\n  removeTodoHandler = (todoId) => {\n    const todos = this.state.todos.slice();\n    todos.splice(todoId, 1);\n    this.setState({ todos: todos });\n  };\n\n  doneTodoToggleHandler = (todoId) => {\n    const todos = this.state.todos.slice();\n    todos[todoId].done = !todos[todoId].done;\n    this.setState({ todos: todos });\n  };\n\n  editTodoHandler = (event, index) => {\n    const newAction = event.target.textContent;\n    const todos = this.state.todos.slice();\n    todos[index].action = newAction;\n    this.setState({ todos: todos });\n    console.log(this.state.todos);\n  };\n\n  editDateHandler = (event, index) => {\n    const newDate = event.currentTarget.value\n    const todos = this.state.todos.slice(); \n    todos[index].dueDate = newDate;\n    this.setState({todos: todos})\n    console.log(this.state.todos)\n  }\n\n  editTimeHandler = (event, index) => {\n    const newTime = event.currentTarget.value\n    const todos = this.state.todos.slice(); \n    todos[index].dueTime = newTime;\n    this.setState({todos: todos})\n    console.log(this.state.todos)\n  }\n\n  editNotesHandler = (event, index) => {\n    const newNote = event.currentTarget.value\n    const todos = this.state.todos.slice(); \n    todos[index].notes = newNote;\n    this.setState({todos: todos})\n    console.log(this.state.todos)\n  }\n\n  toggleTodoInfoHandler = (index) => {\n    if (!index) {\n      this.setState({ showInfoIndex: 0 });\n    } else {\n      this.setState({ showInfoIndex: index });\n    }\n    const currentStatus = this.state.showInfo;\n    this.setState({ showInfo: !currentStatus });\n  };\n\n  render() {\n    const todos = this.state.todos.map((todo, index) => {\n      return (\n        <Todo\n          todo={todo}\n          key={index}\n          clickedDelete={() => this.removeTodoHandler(index)}\n          clickedDone={() => this.doneTodoToggleHandler(index)}\n          done={this.state.todos[index].done}\n          editTodo={(event) => this.editTodoHandler(event, index)}\n          \n          clickedInfo={() => this.toggleTodoInfoHandler(index)}\n        />\n      );\n    });\n\n    return (\n      <Aux>\n        <Modal show={this.state.showInfo}>\n          <TodoInfo\n            todos={this.state.todos}\n            todoIndex={this.state.showInfoIndex}\n            show={() => this.toggleTodoInfoHandler(this.state.showInfoIndex)}\n            editAction={(event)=> this.editTodoHandler(event, this.state.showInfoIndex)}\n            editDate={(event)=> this.editDateHandler(event,this.state.showInfoIndex)}\n            editTime={(event) => this.editTimeHandler(event, this.state.showInfoIndex)}\n            editNote={(event) => this.editNotesHandler(event, this.state.showInfoIndex)}\n            \n          />\n        </Modal>\n        <div className={classes.TodoList}>{todos}</div>\n        <div>\n          <form onSubmit={this.addTodoHandler}>\n            <input type=\"text\" placeholder=\"Enter the action\" name=\"field\" />\n          </form>\n        </div>\n      </Aux>\n    );\n  }\n}\n\nexport default TodoList;\n","import React from \"react\";\nimport \"./App.css\";\nimport TodoList from \"./Containers/TodoList/TodoList\";\nimport Modal from \"./UI/Modal/Modal\";\nimport TodoInfo from \"./Components/TodoInfo/TodoInfo\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>To-Do App</h1>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}